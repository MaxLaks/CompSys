root = true

# All files
[*]
indent_style = space

### C# files
[*.cs]

## Indentation, spacing and linelength
indent_size = 4
max_line_length = 100
editorconfig_visual_line_length = 100
## Naming rules
## https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/naming-rules
## When defining a naming rule the syntax is <kind>.<entityName>.<propertyName> = <propertyValue>

# Pascal case style
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Camel case style
dotnet_naming_style.camel_case_style.capitalization = camel_case

# Snake case style
dotnet_naming_style.snake_case_style.capitalization = all_upper

# Interface style (Prefix: I, Style: PascalCase)
dotnet_naming_style.interface_style.capitalization = pascal_case
dotnet_naming_style.interface_style.required_prefix = I

# Public fields should be PascalCase
dotnet_naming_symbols.public_fields.applicable_kinds = field
dotnet_naming_symbols.public_fields.applicable_accessibilities = public

dotnet_naming_rule.public_fields_rule.severity = error
dotnet_naming_rule.public_fields_rule.symbols = public_fields
dotnet_naming_rule.public_fields_rule.style = pascal_case_style

# Private fields should be camelCase
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

dotnet_naming_rule.private_fields_rule.severity = error
dotnet_naming_rule.private_fields_rule.symbols = private_fields
dotnet_naming_rule.private_fields_rule.style = camel_case_style

# Local fields should be camelCase
dotnet_naming_symbols.local_fields.applicable_kinds = local

dotnet_naming_rule.local_fields_rule.severity = error
dotnet_naming_rule.local_fields_rule.symbols = local_fields
dotnet_naming_rule.local_fields_rule.style = camel_case_style

# Method parameters should be camelCase
dotnet_naming_symbols.method_parameter.applicable_kinds = parameter

dotnet_naming_rule.method_parameter_rule.severity = error
dotnet_naming_rule.method_parameter_rule.symbols = method_parameter
dotnet_naming_rule.method_parameter_rule.style = camel_case_style

# Constants should be all capital SNAKE_CASE
dotnet_naming_symbols.constants.applicable_kinds = field
dotnet_naming_symbols.constants.applicable_accessibilities = *
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_rule.constants_rule.severity = error
dotnet_naming_rule.constants_rule.symbols = constants
dotnet_naming_rule.constants_rule.style = snake_case_style

# Static-readonly fields should be all capital SNAKE_CASE
dotnet_naming_symbols.static_readonly_fields.applicable_kinds = *
dotnet_naming_symbols.static_readonly_fields.applicable_accessibilities = *
dotnet_naming_symbols.static_readonly_fields.required_modifiers = static, readonly

dotnet_naming_rule.static_readonly_fields_rule.severity = error
dotnet_naming_rule.static_readonly_fields_rule.symbols = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_rule.style = snake_case_style

# Interfaces starts with I followed by PascalCase
dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = *

dotnet_naming_rule.interfaces_rule.severity = error
dotnet_naming_rule.interfaces_rule.symbols = interfaces
dotnet_naming_rule.interfaces_rule.style = interface_style

## C# formatting rules
## https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options
dotnet_diagnostic.IDE0055.severity = warning

# Else should not be on a new line, it should be directly after brace
csharp_new_line_before_else = false

# Place braces on the same line
csharp_new_line_before_open_brace = none

# Spaces before and after binary_operators
csharp_space_around_binary_operators = before_and_after

## Other rules
# Always require braces
csharp_prefer_braces = true
dotnet_diagnostic.IDE0011.severity = warning

# Mark fields as readonly when possible
dotnet_style_readonly_field = true:suggestion

# Remove this. or Me. when unnecessary
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Prefer private with get and set over public
dotnet_style_prefer_auto_properties	= false
dotnet_diagnostic.IDE0032.severity = warning

# Modifier order
visual_basic_preferred_modifier_order = Partial, Default, Private, Protected, Public, Friend, NotOverridable, Overridable, MustOverride, Overloads, Overrides, MustInherit, NotInheritable, Static, Shared, Shadows, ReadOnly, WriteOnly, Dim, Const, WithEvents, Widening, Narrowing, Custom, Async
dotnet_diagnostic.IDE0036.severity = warning

# Prefer accessibility modifiers (public, private, etc.) (Disabled for now!)
dotnet_style_require_accessibility_modifiers = omit_if_default
dotnet_diagnostic.IDE0040.severity = silent

## The course SU, supports C# 7 and therefore these should not be used
# Do not use primary constructors (C# 12)
csharp_style_prefer_primary_constructors = false
dotnet_diagnostic.IDE0290.severity = warning

# Do not use switch expressions (use switch statement) (C# 8)
csharp_style_prefer_switch_expression = false
dotnet_diagnostic.IDE0066.severity = warning

# No implicit object creation (C# 9)
csharp_style_implicit_object_creation_when_type_is_apparent = false
dotnet_diagnostic.IDE0090.severity = warning